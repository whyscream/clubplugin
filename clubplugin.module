<?php
/**
 * @file
 * A block module that displays the Onsweb Clubplugin competition data.
 */


/**
 * Implements hook_help().
 *
 * Returns basic help about how to use this plugin.
 */
function clubplugin_help($path, $arg) {
	switch ($path) {
		case 'admin/help#clubplugin':
			return '<p>'. t('Display competition data available through the Onsweb Clubplugin.') .'</p>';
			break;
	}
}


/**
 * Implements hook_block_info().
 *
 * This defines a block in the block administration area, so we can
 * actually configure where to display the data.
 */
function clubplugin_block_info() {
	$blocks['clubplugin'] = array(
		'info' => t('Clubplugin'),
		'cache' => DRUPAL_CACHE_GLOBAL,
	);
	return $blocks;
}


/**
 * Implements hook_block_view().
 *
 * This returns the actual data in the block.
 */
function clubplugin_block_view($delta = '') {
	switch ($delta) {
		case 'clubplugin':
			$block['subject'] = t('Clubplugin');
			if (user_access('access content')) {
				$block['content'] = _clubplugin_block_content();
			}
			return $block;
	}
}


/**
 * Generate block content for clubplugin.
 */
function _clubplugin_block_content() {
	// settings
	$clubplugin_location_template = 'http://www.knkv.nl/kcp/%s/';

	// Check if we have a scriptcode, otherwise there is no data to show.
	$scriptcode = variable_get('clubplugin_scriptcode', '');
	if (empty($scriptcode)) {
		return t('Clubplugin error: no valid script code configured in the administration interface');
	}

	// Check if the library files are available
	$library = libraries_load('clubplugin');
	if (empty($library['loaded'])) {
		return t('Clubplugin error: library files could not be loaded') .' (' . $library['error'] .')';
	}

	// Add offsite js library
	$clubplugin_location = sprintf($clubplugin_location_template, $scriptcode);
	drupal_add_js(sprintf($clubplugin_location, $scriptcode), 'external');

	// Add plugin init script
	drupal_add_js("jQuery(document).ready(function($){ clubplugin.load('#club-plugin'); });", array(
		'type' => 'inline',
		//'scope' => 'footer',
		'group' => JS_DEFAULT,
	));

	// Return placeholder div as content
	$content = '<div id="club-plugin"><noscript>';
	$content .= t('Clubplugin error: you need to enable javascript in your browser to see the Clubplugin competition data.');
	$content .= '</noscript></div>';
	return $content;
}


/**
 * Implements hook_libraries_info().
 *
 * Registers CSS files at libraries/clubplugin for this module.
 */
function clubplugin_libraries_info() {
	$libraries = array();
	$libraries['clubplugin'] = array(
		'name' => 'Onsweb Clubplugin',
		'vendor url' => 'http://www.onswebbond.nl/voor-verenigingen/',
		'download url' => 'http://www.onswebbond.nl/userfiles/plugin.zip',
		'version callback' => '_clubplugin_libraries_version_callback',
		'files' => array(
			'css' => array(
				'style.css',
				'grey.css',
			),
		),
	);
	return $libraries;
}


/**
 * Implements version callback for Libraries API
 */
function _clubplugin_libraries_version_callback($library) {
	// no version information is available in the sources, but PDF doc says:
	return '0.5';
}


/**
 * Implements hook_menu().
 *
 * Adds a link in the administration menu, making the configuration interface
 * available to site admins.
 */
function clubplugin_menu() {
	$items = array();
	$items['admin/config/content/clubplugin'] = array(
		'title' => 'Clubplugin',
		'description' => 'Change settings for the competition data.',
		'access arguments' => array('administer clubplugin'),
		'type' => MENU_NORMAL_ITEM,
		'page callback' => 'drupal_get_form',
		'page arguments' => array('clubplugin_form'),
	);

	return $items;
}


/**
 * Implements hook_form().
 *
 * Page callback that defines the administration interface.
 * @see clubplugin_menu()
 */
function clubplugin_form($form, &$form_state) {
	$form['clubplugin_scriptcode'] = array(
		'#type' => 'textfield',
		'#title' => t('Script code'),
		'#description' => t('The script code as received after registration. It contains between 22 and 32 alphanumeric characters.'),
		'#default_value' => variable_get('clubplugin_scriptcode'),
		'#maxlength' => 32,
		//'#required' => TRUE,
	);

	return system_settings_form($form);
}


/**
 * Implements Form API's _validate().
 *
 * Validate that the provided script code matches the format as
 * specified in Onsweb clubplugin documentation.
 */
function clubplugin_form_validate($form, &$form_state) {
	$scriptcode = $form_state['values']['clubplugin_scriptcode'];

	//if (strlen($scriptcode) < 22 || strlen($scriptcode) > 32) {
	if (!ctype_alnum($scriptcode)) {
		form_set_error('clubplugin_scriptcode', t('Your script code can only contain alphanumeric characters: a-z and 0-9.'));
	} elseif (strlen($scriptcode) < 20 || strlen($scriptcode) > 32) {
		form_set_error('clubplugin_scriptcode', t('Your script code must contain between 22 and 32 characters.'));
	}
}


/**
 * Implements hook_permission().
 *
 * Define access control for clubplugin administration interface.
 */
function clubplugin_permission() {
	return array(
		'administer clubplugin' => array(
			'title' => t('Administer Clubplugin settings'),
		)
	);
}
